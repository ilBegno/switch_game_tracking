#!/usr/bin/env python3
"""
Script to embed games.json data directly into games_viewer.html to avoid CORS issues.
This creates a standalone HTML file that doesn't need to fetch external JSON.
"""

import json
import re
import os
from pathlib import Path

def embed_json_in_html():
    """Embed games.json data directly into the HTML file."""
    
    # File paths
    script_dir = Path(__file__).parent
    json_file = script_dir / "games.json"
    html_file = script_dir / "games_viewer.html"
    output_file = script_dir / "games_viewer_embedded.html"
    
    # Read the JSON data
    try:
        with open(json_file, 'r', encoding='utf-8') as f:
            games_data = json.load(f)
        print(f"‚úì Loaded {len(games_data)} games from {json_file}")
    except FileNotFoundError:
        print(f"‚ùå Error: {json_file} not found")
        return False
    except json.JSONDecodeError as e:
        print(f"‚ùå Error parsing JSON: {e}")
        return False
    
    # Read the HTML file
    try:
        with open(html_file, 'r', encoding='utf-8') as f:
            html_content = f.read()
        print(f"‚úì Read HTML template from {html_file}")
    except FileNotFoundError:
        print(f"‚ùå Error: {html_file} not found")
        return False
    
    # Find the exact lines to replace
    fetch_line = "      const res = await fetch('games.json', { cache: 'no-store' });"
    json_line = "      const games = await res.json();"
    
    if fetch_line in html_content and json_line in html_content:
        # Replace the fetch and await lines with embedded data
        games_js = json.dumps(games_data, indent=6)  # 6 spaces to match HTML indentation
        embedded_data = f"      const games = {games_js};"
        
        # Remove the fetch line and replace the json line
        html_content = html_content.replace(fetch_line, "")
        html_content = html_content.replace(json_line, embedded_data)
        
        # Also remove the async keyword from the function declaration
        html_content = html_content.replace("async function loadJSON()", "function loadJSON()")
        
        print("‚úì Replaced fetch call with embedded data")
    else:
        print("‚ùå Could not find the expected fetch lines to replace")
        return False
    
    # Add a comment at the top indicating this file is auto-generated
    from datetime import datetime
    try:
        last_updated = datetime.now().strftime('%Y-%m-%d %H:%M:%S UTC')
    except:
        last_updated = 'unknown'
    
    comment = f'''<!-- 
This file is auto-generated by embed_json.py
Last updated: {last_updated}
Contains {len(games_data)} games embedded directly in the HTML
Do not edit this file manually - it will be overwritten!
-->
'''
    
    # Insert the comment after the DOCTYPE declaration
    html_content = html_content.replace('<!DOCTYPE html>', f'<!DOCTYPE html>\n{comment}')
    
    # Write the embedded HTML file
    try:
        with open(output_file, 'w', encoding='utf-8') as f:
            f.write(html_content)
        print(f"‚úì Created embedded HTML file: {output_file}")
        print(f"  File size: {os.path.getsize(output_file):,} bytes")
        return True
    except Exception as e:
        print(f"‚ùå Error writing output file: {e}")
        return False

if __name__ == "__main__":
    print("üîÑ Embedding games.json into HTML file...")
    success = embed_json_in_html()
    if success:
        print("‚úÖ Successfully created embedded HTML file!")
    else:
        print("‚ùå Failed to create embedded HTML file")
        exit(1)
